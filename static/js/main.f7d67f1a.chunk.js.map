{"version":3,"sources":["logo.svg","Components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","fetch","then","res","json","data","results","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,I,YC4BAA,EAfD,SAAC,GAAD,IAXMC,EAWJC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,YAAYC,EAApB,EAAoBA,SAASC,EAA7B,EAA6BA,aAA7B,OACV,sBAAKC,UAAU,QAAf,UAEI,qBAAKC,IAfG,mCAeYJ,EAAaK,IAAKN,IACtC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IAEL,sBAAMI,UAAS,eAlBPL,EAkB6BI,EAjB1CJ,GAAO,EACC,QAEHA,GAAM,EACH,SAGA,QAUH,SAAuDI,OAE3D,sBAAKC,UAAU,aAAf,UACI,0CACA,4BAAIF,WCmCDK,MAnDf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA0BA,OAzBAC,qBAAW,WACTC,MARe,uHAQKC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC/CR,EAAUQ,EAAKC,cAKjB,IAmBA,qCACA,mCACE,uCACA,sBAAMC,SArBY,SAACC,GACrBA,EAAEC,iBAECX,IACDG,MAjBW,2FAiBQH,GAAYI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC1DR,EAAUQ,EAAKC,YAKnBP,EAAc,MAWZ,SACA,uBAAOR,UAAU,SAASmB,KAAK,OAAOC,YAAY,YAAYC,MAAOd,EAAYe,SAR9D,SAACL,GACtBT,EAAcS,EAAEM,OAAOF,eAYvB,qBAAKrB,UAAU,kBAAf,SAEGK,EAAOmB,OAAQ,GAAKnB,EAAOoB,KAAI,SAAAC,GAAK,OACnC,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,SAGtB,iCACE,4ECzCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7d67f1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\"\r\nconst setVoteClass=(vote) => {\r\n    if(vote >=8){\r\n        return 'green';\r\n    }\r\n    else if(vote>=6){\r\n        return 'orange';\r\n    }\r\n    else{\r\n        return 'red';\r\n    }\r\n}\r\nconst Movie = ({title,poster_path,overview,vote_average})=>(\r\n    <div className=\"movie\">\r\n        \r\n        <img src={IMG_API + poster_path} alt={title} ></img>\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            \r\n            <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\r\n        </div>\r\n        <div className=\"movie-over\">\r\n            <h2>OverView</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n    </div>\r\n);\r\nexport default Movie;\r\n\r\n","import logo from './logo.svg';\nimport React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Movie from './Components/Movie';\nconst FEATURED_API=\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\nconst IMG_API= \"https://image.tmdb.org/t/p/w1280\";\nconst SEARCH_API=\"https:api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\"\n\nfunction App() {\n  const [movies,setMovies]=useState([]);\n  const [searchTerm,setSearchTerm]= useState('');\n  useEffect( ()=>{\n    fetch(FEATURED_API).then(res => res.json()).then(data => {\n      setMovies(data.results);\n    });\n    \n    \n\n  },[]);\n  const handleOnSubmit =(e) =>{\n    e.preventDefault();\n    \n    if(searchTerm){\n      fetch(SEARCH_API + searchTerm).then(res => res.json()).then(data => {\n        setMovies(data.results);\n      });\n      \n      \n  \n    setSearchTerm('');\n    }\n\n  };\n  const handleOnChange = (e) =>{\n    setSearchTerm(e.target.value);\n  }\n  return (\n    <>\n    <header>\n      <h2>BINGE</h2>\n      <form onSubmit={handleOnSubmit}>\n      <input className=\"search\" type=\"text\" placeholder=\"Search...\" value={searchTerm} onChange={handleOnChange}/>\n\n      </form>\n\n    </header>\n    <div className=\"movie-container\">\n      \n      {movies.length >0 && movies.map(movie =>(\n        <Movie key={movie.id} {...movie}/>\n      ))}\n    </div>\n    <footer>\n      <h3>BINGE:A Movies app by Bhawuk Pahuja.</h3>\n    </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}